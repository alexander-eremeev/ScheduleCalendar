[versions]
#===================
#===== Project =====
#===================
# @keep
compile-sdk = "33"
# @keep
min-sdk = "24"
# @keep
target-sdk = "34"
# @keep
ndk-sdk = "25.2.9519653"  #"21.1.6352462" # 22.1.7171670     это набор инструментов, которые позволяют реализовать часть вашего приложения используя такие языки как С/С++.

# @keep
versionCode = "200"
# @keep
versionName = "2.0.0"
# @keep
applicationId="com.childmathematics.android.shiftschedule"
# @keep
appNameRelease="ScheduleCalendar"
# @keep
appNameDebug="ScheduleCalendar Debug"
# @keep
buildToolsVersion = "33.0.2"



#===================
#===== Compile =====
#===================
gradleEnterprise  = "3.13.2"
#androidGradlePlugin
agp = "8.0.2"                               # com.android.tools.build:gradle /  com.android.application / com.android.library
#---???????????????????
jetbrainsKotlin = "1.8.10"                           #1.8.21 ? org.jetbrains.kotlin",
jetbrainsKotlinLast = "1.8.21"                           #1.8.21 ? org.jetbrains.kotlin",
#===================
#===== Google =====
#===================
googleFirebase = "32.0.0"                               #com.google.firebase:firebase-bom
googleFirebaseCrashlytics= "2.9.5"                      #com.google.firebase:firebase-crashlytics-gradle
googleFirebasePerformance= "1.4.2"                       #com.google.firebase:perf-plugin
googleFirebaseAnalitics = "21.3.0"

googleHilt = "2.46.1"                                   #com.google.dagger
googleAccompanist = "0.28.0"                            #  com.google.accompanist
googleProtobuf = "3.23.1"         #com.google.protobuf  Protocol Buffers [Lite]

googleDevToolsKsp = "1.8.10-1.0.9"        #com.google.devtools.ksp.gradle.plugin
googleServices = "4.3.15"               #com.google.gms", name = "google-services
googleAds = "22.1.0"                        #com.google.android.gms", name = "play-services-ads


#=================================
#===== Android dependencies ======
#=================================
#This project contains a small subset of OpenJDK libraries simplified for use on older runtimes. This is not an official Google product.
androidDesugarJdkLibs = "2.0.3"                 # com.android.tools:desugar_jdk_libs

jetbrainsKotlinxCoroutines = "1.7.1"                #org.jetbrains.kotlinx:kotlinx-coroutines-android

googleAndroidMaterial = "1.9.0"                      # com.google.android.material

androidxAppcompat = "1.6.1"                                 # androidx.appcompat:appcompat

androidxActivityKtx = "1.7.1"                       #  androidx.activity:activity-ktx

androidxFragmentKtx = "1.5.7"                      #androidx.fragment:fragment-ktx

androidxCoreKtx = "1.10.1"                       #1.9.0 androidx.core:core-ktx"
#Library for legacy multi-dex support
androidxMultidex = "2.0.1"                  #androidx.multidex:multidex"

androidxPreference = "1.2.0"                        #androidx.preference:preference-ktx

androidxRecyclerview = "1.3.0"                  # 1.2.1 androidx.recyclerview:recyclerview

androidxConstraintlayout = "2.1.4"                      #androidx.constraintlayout:constraintlayout

androidxCoordinatorlayout = "1.2.0"                     #androidx.coordinatorlayout:coordinatorlayout
                                        #androidx.navigation:navigation-ui-ktx
                                        #androidx.navigation.safeargs.kotlin
androidxNavigation = "2.5.3"            # androidx.navigation:navigation-fragment-ktx
                                        #androidx.navigation", name = "navigation-compose
androidxConcurrentFuturesKtx = "1.1.0"    #androidx.concurrent:concurrent-futures-ktx
                                        #androidx.lifecycle:lifecycle-viewmodel-ktx
androidxLifecycle = "2.6.1"             #androidx.lifecycle:lifecycle-livedata-ktx

androidxAnnotation = "1.6.0"            #androidx.annotation:annotation

androidxCardview = "1.0.0"              #androidx.cardview:cardview

androidxViewpager2 = "1.0.0"            #androidx.viewpager2:viewpager2

androidxSwiperefreshlayout = "1.1.0"    #androidx.swiperefreshlayout:swiperefreshlayout

androidxRoom = "2.5.1"                  #androidx.room:room-runtime

androidxCamera = "1.2.2"                #androidx.camera:camera-extensions

androidxExifinterface = "1.3.6"     ##androidx.exifinterface:exifinterface

androidxDataStore = "1.0.0"         #androidx.datastore:datastore

androidxMacroBenchmark = "1.1.1"    #androidx.benchmark:benchmark-macro-junit4              #

androidxProfileinstaller = "1.3.1"  #androidx.profileinstaller:profileinstaller

androidxStartup = "1.1.1"   #androidx.startup:startup-runtime

androidxWindow = "1.0.0"    #androidx.window:window

#===========================
#===== Android Compose =====
#===========================
#--??????????????????????????
androidxCompose = "1.3.1"               #"1.4.3"?    androidx.compose.foundation:foundation/androidx.compose.ui
#---------------
androidxActivityCompose = "1.7.1"   #androidx.activity:activity-compose
#--??????????????????????????
androidxComposeCompiler = "1.4.5"       #1ю4ю3 1.4.7 Kotlin version 1.8.21 composeOptions {kotlinCompilerExtensionVersion libs.versions.androidxComposeCompiler.get()
#--??????????????????????????
androidxComposeMaterial3 = "1.0.1"      #"1.1.0"  ?            #androidx.compose.material3
#-----------------
androidxHiltNavigationCompose = "1.0.0"         #androidx.hilt:hilt-navigation-compose

androidxGlanceComposeWidget = "1.0.0-beta01"                 #androidx.glance:glance

#=======================
#===== Third party =====
#=======================
#gRPC and protocol buffers for Android, Kotlin, and Java.
squareupProtoWirePlugin = "4.6.2"   #"4.4.1"  #com.squareup.wire:wire-gradle-plugin
#Static code analysis for Kotlin
arturboschDetekt = "1.22.0"           #io.gitlab.arturbosch.detekt:detekt-formatting
#Dokka is an API documentation engine for Kotlin and Java, performing the same function as Javadoc for Java
jetbrainsDokka = "1.8.10"            #  org.jetbrains.dokka:dokka-gradle-plugin

ktlint = "0.48.2"			# https://pinterest.github.io/ktlint	
jlleitschuhKtlintGradlePlugin = "11.3.1"	# org.jlleitschuh.gradle.ktlint

#this plugin provides a task to determine which dependencies have updates.
benmanesVersions = "0.46.0"                         #com.github.ben-manes.versions
# littlerobotsVersionCatalogUpdate = "0.6.1"                         #nl.littlerobots.version-catalog-update

# EclEmma инструмент создания отчета покрытия кода JUnit тестами
jacocoCore = "0.8.10"    #	#org.jacoco:org.jacoco.core
# jetbrains инструмент создания отчета покрытия кода JUnit тестами для Kotlin
#Gradle Plugin For Kotlin Code Coverage Tools
jetbrainsKotlinxKover =  "0.7.0"			# org.jetbrains.kotlinx.kover

#SonarQube (ранее Sonar) – это платформа  для непрерывного контроля качества кода.
sonarqube = "4.0.0.2929"                    #org.sonarqube  SonarQube Gradle Plugin

airbnbAndroidComposeLottie = "5.2.0"             #6.0.0? com.airbnb.android:lottie-compose

#An image loading library for Android backed by Kotlin Coroutines
coilcompose = "2.2.1"                       #2.3.0 ? io.coil-kt:coil-compose

#A fast and efficient image loading library for Android focused on smooth scrolling.
bumptechGlide = "4.15.1"                        #com.github.bumptech.glide:glide
#provides simple Transformations to Glide
bumptechGlideTransformations = "4.3.0"          #jp.wasabeef:glide-transformations

#Square’s meticulous HTTP client for Java and Kotlin.
squareUpOkhttp = "4.11.0"                        #4.10.0    com.squareup.okhttp3:okhttp
#A type-safe HTTP client for Android and Java.
squareUpRetrofit2 = "2.9.0"            #May 20, 2020  #com.squareup.retrofit2:retrofit
#A modern JSON API for Android and Java
squareUpMoshi = "1.15.0"      #"1.3.10"       #com.squareup.moshi:moshi
#squareUpMoshiKotlin = "1.15.0"      #"1.3.10"       #com.squareup.moshi:moshi-kotlin
squareupOkio = "3.3.0"              ##com.squareup.okio:okio

rxjava2 = "2.2.21"                     #io.reactivex.rxjava2:rxjava
rxjava2Android = "2.1.1"         #Feb 16, 2019  #io.reactivex.rxjava2:rxandroid
#Reactive Extensions for Java
rxjava3 = "3.1.6"               #3.1.5    #io.reactivex.rxjava3:rxjava
rxjava3Android = "3.0.2"       #3.0.0 #io.reactivex.rxjava3:rxandroid
#Gson is a Java library that can be used to convert Java Objects into their JSON representation. It can also be used to convert a JSON string to an equivalent Java object.
googleCodeGson = "2.10.1"                   #2.10 ??    #com.google.code.gson:gson
#EventBus is a publish/subscribe event bus optimized for Android
greenrobotEventbus = "3.3.1"             #Dec 08, 2021 #org.greenrobot:eventbus

tencentMarsXlog = "1.2.6"                   #	Feb 24, 2021  #com.tencent.mars:mars-xlog
karnNotify = "1.5.0"                       #io.karn:notify
tencentMmkv = "1.2.14"                         #1.2.14    #com.tencent:mmkv
#Core Jackson processing abstractions (aka Streaming API), implementation for JSON
fasterxmlJackson = "2.15.1"                 #2.13.4           #com.fasterxml.jackson.core:jackson-core
xxPermissions = "16.6"          #16.2           #com.github.getActivity:XXPermissions
# As of 2.13.0, you need to add fasterxml jackson manually. Начиная с версии 2.13.0 вам необходимо вручную добавить jackson fastxml.
#A pluggable BSON generator and parser for Jackson JSON processor.
undercouchBsonJackson = "2.13.1"                         # de.undercouch:bson4jackson
#A library that lets you use reflection without any restriction above Android P
tiannFreeReflection = "3.1.0"                   #com.github.tiann:FreeReflection
flycoTablayout = "2.2.0"     #Android TabLayout Library      #com.flyco.tablayout:FlycoTabLayout_Lib

scwangSmartSrl = "2.0.5"           #com.scwang.smart:refresh-footer-classics
#Netty/Codec/HTTP
nettyCodec = "4.1.92.Final"        #4.1.82.Final      #io.netty:netty-codec-http
insertKoin = "3.2.1"                      #io.insert-koin:koin-android
bytedecoFfmpeg = "5.0-1.5.7"           #org.bytedeco:ffmpeg
bytedecoJavaCpp = "1.5.7"              #org.bytedeco:javacpp

afollestadMaterialDialogs = "3.3.0"          #com.afollestad.material-dialogs:input
daimajiaAndroidAnimations = "2.4"              #com.daimajia.androidanimations:library
sunJavaMail = "1.6.7"                         #com.sun.mail:android-mail

jcraftJzlib = "1.1.3"         #com.jcraft:jzlib
koushikduttaAndroidAsync = "3.1.0"          #com.koushikdutta.async:androidasync
liangjingkanjiNet = "3.5.1"                               #com.github.liangjingkanji:Net
davemorrisseyLabsSubsamplingScaleImageView = "3.10.0"     #com.davemorrissey.labs:subsampling-scale-image-view-androidx
mannodermausAndroidJunit5 = "1.8.2.1"             #de.mannodermaus.android-junit5
mannodermausJunit5 = "1.3.0"               #de.mannodermaus.junit5:android-test-core

debuggingChucker = "3.5.2"                  #com.github.chuckerteam.chucker
#================
#===== Yandex =====
#================

yandexmMobileads = "5.8.0"            #5.4.0     5.5.0  com.yandex.android", name = "mobileads
yandexMobMetrica = "5.3.0"             #"5.2.0"     #com.yandex.android", name = "mobmetricalib


#================
#===== Test =====
#================
junitJupiter = "5.9.2" # JUnit 5             #org.junit.jupiter:junit-jupiter-api

androidxTest = "1.5.0"                 #androidx.test:core

androidxTestExt = "1.1.5"

androidxTestRunner = "1.5.2"

androidxTestMonitor = "1.6.1"
androidxTestUiAutomator = "2.2.0"

androidxTestEspressoCore = "3.5.1"                         #androidx.test.espresso:espresso-core
#testandroidxespressoCore = "3.5.1"	# "3.5.0"         #3.4.0
#Fluent Assertion-Library for Kotlin
amshoveKluent = "1.72"                     #org.amshove.kluent:kluent-android
ioMockk = "1.13.4"                            #io.mockk:mockk
androidxArch = "2.2.0"                          #androidx.arch.core:core-testing

powermockJunit4 = "2.0.9"             #org.powermock:powermock-module-junit4
#An alternative Android testing framework
robolectricTest = "4.9.2"       #org.robolectric:robolectric

#testandroidxjunit = "1.1.3"
#testandroidxrules =  "1.4.0"
#testandroidxuiautomator =  "2.2.0"
#JUnit is a unit testing framework to write and run repeatable automated tests on Java.
junitTest = "4.13.2"                #junit:junit
appCashTurbineTest = "0.12.0"              #app.cash.turbine", name = "turbine

#===================#===================#===================#===================
#===================#===================#===================#===================
#===================#===================#===================#===================

[libraries]
#=========================================================
#===== Compile =====
#=========================================================
#===================
#===== Android  Libraries =====
#===================
android-gradlePlugin = { group = "com.android.tools.build", name = "gradle", version.ref = "agp" }
android-desugarJdkLibs = { group = "com.android.tools", name = "desugar_jdk_libs", version.ref = "androidDesugarJdkLibs" }
google-android-material = { group = "com.google.android.material", name = "material", version.ref = "googleAndroidMaterial" }
#===================
#====jetbrains  Libraries
#===================
jetbrains-kotlin-gradlePlugin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "jetbrainsKotlin" }
jetbrains-kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "jetbrainsKotlin" }
jetbrains-kotlin-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "jetbrainsKotlinxCoroutines" }
#===================
#====Google  Libraries
#===================
google-firebase-crashlytics-gradlePlugin = { group = "com.google.firebase", name = "firebase-crashlytics-gradle", version.ref = "googleFirebaseCrashlytics" }
google-firebase-performance-gradlePlugin = { group = "com.google.firebase", name = "perf-plugin", version.ref = "googleFirebasePerformance" }
google-firebase = { group = "com.google.firebase", name = "firebase-bom", version.ref = "googleFirebase" }
google-firebase-analytics = { group = "com.google.firebase", name = "firebase-analytics-ktx", version.ref = "googleFirebaseAnalitics" }

google-hilt-gradlePlugin = { group = "com.google.dagger", name = "hilt-android-gradle-plugin", version.ref = "googleHilt" }
google-hilt-android = { group = "com.google.dagger", name = "hilt-android", version.ref = "googleHilt" }
google-hilt-compiler = { group = "com.google.dagger", name = "hilt-android-compiler", version.ref = "googleHilt" }

google-kspPlugin = { group = "com.google.devtools.ksp", name = "com.google.devtools.ksp.gradle.plugin", version.ref = "googleDevToolsKsp" }
google-servicesPlugin = { group = "com.google.gms", name = "google-services", version.ref = "googleServices" }

google-protobuf = { group = "com.google.protobuf", name = "protobuf-javalite", version.ref = "googleProtobuf" }

google-accompanist-navigation = { group = "com.google.accompanist", name = "accompanist-navigation-material", version.ref = "googleAccompanist" }
google-accompanist-systemuicontroller = { group = "com.google.accompanist", name = "accompanist-systemuicontroller", version.ref = "googleAccompanist" }
google-accompanist-pager = { group = "com.google.accompanist", name = "accompanist-pager", version.ref = "googleAccompanist" }
google-accompanist-insets = { group = "com.google.accompanist", name = "accompanist-insets", version.ref = "googleAccompanist" }

google-ads = { group = "com.google.android.gms", name = "play-services-ads", version.ref = "googleAds" }


#=========================
#===== yandex Libraries =====
#=========================

yandex-mobileads = { group = "com.yandex.android", name = "mobileads", version.ref = "yandexmMobileads" }
#yandex-mobmetrica = { group = "com.yandex.android", name = "mobmetricalib", version.ref = "yandexMobMetrica" }

#=========================
#===== debugging Libraries =====
#=========================

debugging-chucker = { group = "com.github.chuckerteam.chucker", name = "library", version.ref = "debuggingChucker" }
debugging-compose-uiTooling = { group = "androidx.compose.ui", name = "ui-tooling", version.ref = "androidxCompose" }
debugging-okhttp-logging = { group = "com.squareup.okhttp3", name = "logging-interceptor", version.ref = "squareUpOkhttp" }

#===================
#===== Androidx =====
#===================
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidxAppcompat" }

androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "androidxCoreKtx" }

androidx-activity = { module = "androidx.activity:activity-ktx", version.ref = "androidxActivityKtx" }
androidx-benchmark-macro = { group = "androidx.benchmark", name = "benchmark-macro-junit4", version.ref = "androidxMacroBenchmark" }

androidx-dataStore-core = { group = "androidx.datastore", name = "datastore", version.ref = "androidxDataStore" }

androidx-fragment = { module = "androidx.fragment:fragment-ktx", version.ref = "androidxFragmentKtx" }
androidx-multidex = { module = "androidx.multidex:multidex", version.ref = "androidxMultidex" }
androidx-annotation = { module = "androidx.annotation:annotation", version.ref = "androidxAnnotation" }
androidx-preference = { module = "androidx.preference:preference-ktx", version.ref = "androidxPreference" }
androidx-swiperefreshlayout = { module = "androidx.swiperefreshlayout:swiperefreshlayout", version.ref = "androidxSwiperefreshlayout" }
androidx-concurrent-futures-ktx = { module = "androidx.concurrent:concurrent-futures-ktx", version.ref = "androidxConcurrentFuturesKtx" }
androidx-navigation-fragment = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "androidxNavigation" }
androidx-navigation-ui = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "androidxNavigation" }

androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "androidxConstraintlayout" }
androidx-coordinatorlayout = { module = "androidx.coordinatorlayout:coordinatorlayout", version.ref = "androidxCoordinatorlayout" }
androidx-recyclerview = { module = "androidx.recyclerview:recyclerview", version.ref = "androidxRecyclerview" }
androidx-cardview = { module = "androidx.cardview:cardview", version.ref = "androidxCardview" }
androidx-viewpager2 = { module = "androidx.viewpager2:viewpager2", version.ref = "androidxViewpager2" }
# CameraX core library
androidx-camera-core = { module = "androidx.camera:camera-core", version.ref = "androidxCamera" }
# CameraX Camera2 extensions
androidx-camera-camera2 = { module = "androidx.camera:camera-camera2", version.ref = "androidxCamera" }
androidx-camera-video = { module = "androidx.camera:camera-video", version.ref = "androidxCamera" }
# CameraX Lifecycle library
androidx-camera-lifecycle = { module = "androidx.camera:camera-lifecycle", version.ref = "androidxCamera" }
# CameraX View class
androidx-camera-view = { module = "androidx.camera:camera-view", version.ref = "androidxCamera" }
# CameraX Extensions library
androidx-camera-ext = { module = "androidx.camera:camera-extensions", version.ref = "androidxCamera" }
androidx-exifinterface = { module = "androidx.exifinterface:exifinterface", version.ref = "androidxExifinterface" }

androidx-profileinstaller = { group = "androidx.profileinstaller", name = "profileinstaller", version.ref = "androidxProfileinstaller" }
androidx-startup = { group = "androidx.startup", name = "startup-runtime", version.ref = "androidxStartup" }
androidx-window = { group = "androidx.window", name = "window", version.ref = "androidxWindow" }

#=============================
#===== Androidx Lifecycle =====
#=============================
# ViewModel
androidx-lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidxLifecycle" }
# LiveData
androidx-lifecycle-livedata = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "androidxLifecycle" }
# optional - helpers for implementing LifecycleOwner in a Service
androidx-lifecycle-service = { module = "androidx.lifecycle:lifecycle-service", version.ref = "androidxLifecycle" }
# Lifecycles only (without ViewModel or LiveData)
androidx-lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidxLifecycle" }
androidx-lifecycle-runtimeCompose = { group = "androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidxLifecycle" }
# Saved state module for ViewModel
androidx-lifecycle-viewmodel-savedstate = { module = "androidx.lifecycle:lifecycle-viewmodel-savedstate", version.ref = "androidxLifecycle" }
androidx-lifecycle-viewModelCompose = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "androidxLifecycle" }

#===========================
#===== Androidx Room ========
#===========================
androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "androidxRoom" }
# kapt
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "androidxRoom" }
# optional - Kotlin Extensions and Coroutines support for Room
androidx-room-ktx = { module = "androidx.room:room-ktx", version.ref = "androidxRoom" }
# optional - RxJava support for Room
androidx-room-rxjava2 = { module = "androidx.room:room-rxjava2", version.ref = "androidxRoom" }

#===========================
#===== Android Compose =====
#===========================

androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidxActivityCompose" }

androidx-compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "androidxCompose" }

androidx-compose-material = { module = "androidx.compose.material:material", version.ref = "androidxCompose" }
androidx-compose-material-iconsCore = { group = "androidx.compose.material", name = "material-icons-core", version.ref = "androidxCompose" }
androidx-compose-material-iconsExtended = { group = "androidx.compose.material", name = "material-icons-extended", version.ref = "androidxCompose" }
androidx-compose-material3 = { group = "androidx.compose.material3", name = "material3", version.ref = "androidxComposeMaterial3" }

androidx-navigation-compose = { group = "androidx.navigation", name = "navigation-compose", version.ref = "androidxNavigation" }
androidx-hilt-navigation-compose = { group = "androidx.hilt", name = "hilt-navigation-compose", version.ref = "androidxHiltNavigationCompose" }

androidx-compose-ui = { module = "androidx.compose.ui:ui", version.ref = "androidxCompose" }

androidx-compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "androidxCompose" }
androidx-compose-ui-util = { group = "androidx.compose.ui", name = "ui-util", version.ref = "androidxCompose" }
androidx-compose-widget = { group = "androidx.glance", name = "glance", version.ref = "androidxGlanceComposeWidget" }

#=======================
#===== Third party =====
#=======================
arturbosch-detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "arturboschDetekt" }
# https://github.com/Kotlin/dokka
jetbrains-dokka-gradle-plugin = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "jetbrainsDokka" }
jetbrains-dokka-core = { module = "org.jetbrains.dokka:dokka-core", version.ref = "jetbrainsDokka" }

#Protocol Buffers
squareup-wire-gradlePlugin = { group = "com.squareup.wire", name = "wire-gradle-plugin", version.ref = "squareupProtoWirePlugin" }
square-moshi = { module = "com.squareup.moshi:moshi", version.ref = "squareUpMoshi" }
square-moshi-kotlin = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "squareUpMoshi" }
square-okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "squareUpOkhttp" }
square-okhttp-LogInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "squareUpOkhttp" }
square-okhttp-mock = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "squareUpOkhttp" }
square-retrofit2 = { module = "com.squareup.retrofit2:retrofit", version.ref = "squareUpRetrofit2" }
square-retrofit2-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "squareUpRetrofit2" }
square-retrofit2-moshi = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "squareUpRetrofit2" }
square-retrofit2-converter-scalars = { module = "com.squareup.retrofit2:converter-scalars", version.ref = "squareUpRetrofit2" }
square-retrofit2-adapter-rxjava2 = { module = "com.squareup.retrofit2:adapter-rxjava2", version.ref = "squareUpRetrofit2" }
squareup-okhttp = { group = "com.squareup.okhttp3", name = "okhttp", version.ref = "squareUpOkhttp" }
squareup-retrofit-converter = { group = "com.squareup.retrofit2", name = "converter-moshi", version.ref = "squareUpRetrofit2" }
squareup-retrofit-core = { group = "com.squareup.retrofit2", name = "retrofit", version.ref = "squareUpRetrofit2" }
squareup-okio = { group = "com.squareup.okio", name = "okio-fakefilesystem", version.ref = "squareupOkio" }

lottie-compose = { group = "com.airbnb.android", name = "lottie-compose", version.ref = "airbnbAndroidComposeLottie" }


rxjava2-java = { module = "io.reactivex.rxjava2:rxjava", version.ref = "rxjava2" }
rxjava2-android = { module = "io.reactivex.rxjava2:rxandroid", version.ref = "rxjava2Android" }
rxjava3-java = { module = "io.reactivex.rxjava3:rxjava", version.ref = "rxjava3" }
rxjava3-android = { module = "io.reactivex.rxjava3:rxandroid", version.ref = "rxjava3Android" }

gson = { module = "com.google.code.gson:gson", version.ref = "googleCodeGson" }

io-coil-compose = { group = "io.coil-kt", name = "coil-compose", version.ref = "coilcompose" }
coil = { module = "io.coil-kt:coil", version.ref = "coilcompose" }
coil-gif = { module = "io.coil-kt:coil-gif", version.ref = "coilcompose" }
coil-svg = { module = "io.coil-kt:coil-svg", version.ref = "coilcompose" }
coil-video = { module = "io.coil-kt:coil-video", version.ref = "coilcompose" }

glide = { module = "com.github.bumptech.glide:glide", version.ref = "bumptechGlide" }
# kapt(libs.glide.compiler)
glide-compiler = { module = "com.github.bumptech.glide:compiler", version.ref = "bumptechGlide" }
glide-okhttp3 = { module = "com.github.bumptech.glide:okhttp3-integration", version.ref = "bumptechGlide" }
# https://github.com/wasabeef/glide-transformations
glide-transformations = { module = "jp.wasabeef:glide-transformations", version.ref = "bumptechGlideTransformations" }

flyco-TabLayout = { module = "com.flyco.tablayout:FlycoTabLayout_Lib", version.ref = "flycoTablayout" }

srl-footer = { module = "com.scwang.smart:refresh-footer-classics", version.ref = "scwangSmartSrl" }
srl-header = { module = "com.scwang.smart:refresh-header-classics", version.ref = "scwangSmartSrl" }
srl-kernel = { module = "com.scwang.smart:refresh-layout-kernel", version.ref = "scwangSmartSrl" }

jacoco = { module = "org.jacoco:org.jacoco.core", version.ref = "jacocoCore" }

eventbus = { module = "org.greenrobot:eventbus", version.ref = "greenrobotEventbus" }

netty-codec-http = { module = "io.netty:netty-codec-http", version.ref = "nettyCodec" }
netty-handler = { module = "io.netty:netty-handler", version.ref = "nettyCodec" }
netty-proxy = { module = "io.netty:netty-handler-proxy", version.ref = "nettyCodec" }
netty-all = { module = "io.netty:netty-all", version.ref = "nettyCodec" }

koin = { module = "io.insert-koin:koin-android", version.ref = "insertKoin" }

# https://mvnrepository.com/artifact/org.bytedeco/ffmpeg
# In module `Old_build.gradle.kts.kts`
# dependencies {
#     implementation(libs.bytedeco.ffmpeg)
#     implementation(libs.bytedeco.ffmpeg) {
#         artifact {
#             classifier = "android-arm"
#         }
#     }
# }
bytedeco-ffmpeg = { module = "org.bytedeco:ffmpeg", version.ref = "bytedecoFfmpeg" }

# https://mvnrepository.com/artifact/org.bytedeco/javacpp
# In module `Old_build.gradle.kts.kts`
# dependencies {
#     implementation(libs.bytedeco.javacpp)
#     implementation(libs.bytedeco.javacpp) {
#         artifact {
#             classifier = "android-arm"
#         }
#     }
# }
bytedeco-javacpp = { module = "org.bytedeco:javacpp", version.ref = "bytedecoJavaCpp" }
material-dialogs = { module = "com.afollestad.material-dialogs:input", version.ref = "afollestadMaterialDialogs" }
karn-notify = { module = "io.karn:notify", version.ref = "karnNotify" }
xx-permissions = { module = "com.github.getActivity:XXPermissions", version.ref = "xxPermissions" }
tencent-mmkv = { module = "com.tencent:mmkv", version.ref = "tencentMmkv" }
# In module `Old_build.gradle.kts.kts`
# dependencies {
#     implementation(libs.android.animations) {
#         artifact {
#             type = "aar"
#         }
#     }
# }
android-animations = { module = "com.daimajia.androidanimations:library", version.ref = "daimajiaAndroidAnimations" }

java-mail = { module = "com.sun.mail:android-mail", version.ref = "sunJavaMail" }
java-activation = { module = "com.sun.mail:android-activation", version.ref = "sunJavaMail" }
# By using netty,
# no need to use this library when adding pipeline however we indeed need its library.
# So what's the magic?
# Используя netty,
## нет необходимости использовать эту библиотеку при добавлении пайплайна, однако нам действительно нужна ее библиотека.
# Так в чем магия?
# https://mvnrepository.com/artifact/com.jcraft/jzlib
jzlib = { module = "com.jcraft:jzlib", version.ref = "jcraftJzlib" }
# As of bson4jackson 2.13.0, you need add fasterxml jackson manually.
# Начиная с bson4jackson 2.13.0, вам нужно вручную добавить fastxml jackson.
bson = { module = "de.undercouch:bson4jackson", version.ref = "undercouchBsonJackson" }
fasterxml-jackson-core = { module = "com.fasterxml.jackson.core:jackson-core", version.ref = "fasterxmlJackson" }
fasterxml-jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "fasterxmlJackson" }
fasterxml-jackson-annotations = { module = "com.fasterxml.jackson.core:jackson-annotations", version.ref = "fasterxmlJackson" }
free-reflection = { module = "com.github.tiann:FreeReflection", version.ref = "tiannFreeReflection" }
androidasync = { module = "com.koushikdutta.async:androidasync", version.ref = "koushikduttaAndroidAsync" }
net = { module = "com.github.liangjingkanji:Net", version.ref = "liangjingkanjiNet" }
subsampling-scale-image-view = { module = "com.davemorrissey.labs:subsampling-scale-image-view-androidx", version.ref = "davemorrisseyLabsSubsamplingScaleImageView" }

#================
#===== Test =====
#================
# testImplementation
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junitJupiter" }
# testRuntimeOnly
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junitJupiter" }
# (Optional) If you need "Parameterized Tests"
# testImplementation
junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junitJupiter" }
# testRuntimeOnly
junit-vintage-engine = { module = "org.junit.vintage:junit-vintage-engine", version.ref = "junitJupiter" }

kotlin-junit5 = { module = "org.jetbrains.kotlin:kotlin-test-junit5", version.ref = "jetbrainsKotlin" }
#OLD ----------------------------------

junit-test = { group = "junit", name = "junit", version.ref = "junitTest"}
turbine-test = { group = "app.cash.turbine", name = "turbine", version.ref = "appCashTurbineTest" }
#--------------
androidx-test-espressoCore = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "androidxTestEspressoCore" }
androidx-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "androidxTestEspressoCore" }
androidx-espresso-contrib = { module = "androidx.test.espresso:espresso-contrib", version.ref = "androidxTestEspressoCore" }
androidx-espresso-web = { module = "androidx.test.espresso:espresso-web", version.ref = "androidxTestEspressoCore" }
androidx-espresso-intents = { module = "androidx.test.espresso:espresso-intents", version.ref = "androidxTestEspressoCore" }
androidx-test-core = { module = "androidx.test:core", version.ref = "androidxTest" }
androidx-test-core-ktx = { module = "androidx.test:core-ktx", version.ref = "androidxTest" }
androidx-test-rules = { module = "androidx.test:rules", version.ref = "androidxTest" }
androidx-test-runner = { module = "androidx.test:runner", version.ref = "androidxTestRunner" }
androidx-test-ext-junit = { module = "androidx.test.ext:junit", version.ref = "androidxTestExt" }
androidx-test-ext-junit-ktx = { module = "androidx.test.ext:junit-ktx", version.ref = "androidxTestExt" }
androidx-test-monitor = { module = "androidx.test:monitor", version.ref = "androidxTestMonitor" }
androidx-test-uiautomator = { module = "androidx.test.uiautomator:uiautomator", version.ref = "androidxTestUiAutomator" }

jetbrains-test-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "jetbrainsKotlinxCoroutines" }

kluent-android = { module = "org.amshove.kluent:kluent-android", version.ref = "amshoveKluent" }
mockk = { module = "io.mockk:mockk", version.ref = "ioMockk" }
arch = { module = "androidx.arch.core:core-testing", version.ref = "androidxArch" }
compose-ui-test-junit4 = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "androidxCompose" }
compose-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "androidxCompose" }
square-okhttp-mockjunit5 = { module = "com.squareup.okhttp3:mockwebserver3-junit5", version.ref = "squareUpOkhttp" }
powermock-junit4 = { module = "org.powermock:powermock-module-junit4", version.ref = "powermockJunit4" }
powermock-core = { module = "org.powermock:powermock-core", version.ref = "powermockJunit4" }
powermock-api = { module = "org.powermock:powermock-api-mockito2", version.ref = "powermockJunit4" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectricTest" }
#test-robolectric = { group = "org.robolectric", name = "robolectric", version.ref = "testrobolectric"}
mars-xlog = { module = "com.tencent.mars:mars-xlog", version.ref = "tencentMarsXlog" }
# androidTestImplementation
mannodermaus-junit5-core = { module = "de.mannodermaus.junit5:android-test-core", version.ref = "mannodermausJunit5" }
# androidTestRuntimeOnly
mannodermaus-junit5-runner = { module = "de.mannodermaus.junit5:android-test-runner", version.ref = "mannodermausJunit5" }

#===================#===================#===================#===================
#===================#===================#===================#===================
#===================#===================#===================#===================

[bundles]
networking = ["squareup-retrofit-core", "squareup-retrofit-converter", "squareup-okhttp"]

androidx-full = [
    "androidx-core-ktx",
    "androidx-appcompat",
    "androidx-annotation",
    "androidx-constraintlayout",
    "androidx-coordinatorlayout",
    "androidx-recyclerview",
    "androidx-cardview",
    "androidx-fragment",
    "androidx-viewpager2"
]
androidx-main = [
    "androidx-core-ktx",
    "androidx-appcompat",
    "androidx-annotation",
    "androidx-constraintlayout",
    "androidx-recyclerview",
    "androidx-cardview",
    "androidx-fragment"
]
androidx-simple = [
    "androidx-core-ktx",
    "androidx-appcompat",
    "androidx-annotation",
    "androidx-constraintlayout"
]
kotlin = ["jetbrains-kotlin-reflect", "jetbrains-kotlin-coroutines"]
navigation = ["androidx-navigation-fragment", "androidx-navigation-ui"]
lifecycle-full = [
    "androidx-lifecycle-viewmodel",
    "androidx-lifecycle-livedata",
    "androidx-lifecycle-service",
    "androidx-lifecycle-viewmodel-savedstate"
]
lifecycle-simple = [
    "androidx-lifecycle-viewmodel",
    "androidx-lifecycle-livedata"
]
room = ["androidx-room-runtime", "androidx-room-ktx"]
coil = ["coil", "coil-gif", "coil-svg", "coil-video"]
glide = ["glide", "glide-okhttp3", "glide-transformations"]
srl = ["srl-kernel", "srl-header", "srl-footer"]
java-mail = ["java-mail", "java-activation"]
fasterxml = [
    "fasterxml-jackson-core",
    "fasterxml-jackson-databind",
    "fasterxml-jackson-annotations"
]
# As of bson4jackson 2.13.0, you need add fasterxml jackson manually.
# Начиная с bson4jackson 2.13.0, вам нужно вручную добавить fastxml jackson.
bson = [
    "bson",
    "fasterxml-jackson-core",
    "fasterxml-jackson-databind",
    "fasterxml-jackson-annotations"
]
square-retrofit2 = [
    "square-retrofit2",
    "square-retrofit2-gson",
    "square-retrofit2-moshi",
    "square-retrofit2-converter-scalars",
    "square-retrofit2-adapter-rxjava2",
]
camerax = [
    "androidx-camera-core",
    "androidx-camera-camera2",
    "androidx-camera-video",
    "androidx-camera-lifecycle",
    "androidx-camera-view",
    "androidx-camera-ext"
]
test = [
    "kotlin-junit5",
    "junit-jupiter-api",
    "junit-jupiter-params",
    "mockk",
    "jetbrains-test-coroutines",
    "kluent-android",
    "arch",
    "robolectric"
]
android-test = [
    "androidx-test-core",
    "androidx-test-core-ktx",
    "androidx-test-runner",
    "androidx-test-ext-junit-ktx",
    "androidx-test-monitor",
    "androidx-test-uiautomator",
    "androidx-espresso-core",
    "androidx-espresso-contrib",
    "androidx-espresso-web",
    "androidx-espresso-intents"
]
test-runtime-only = ["junit-jupiter-engine", "junit-vintage-engine"]
powermock = [
    "powermock-junit4",
    "powermock-core",
    "powermock-api"
]

#===================#===================#===================#===================
#===================#===================#===================#===================
#===================#===================#===================#===================

[plugins]
#android-gradle-Plugin = { id = "com.android.tools.build", name = "gradle", version.ref = "agp" }
android-gradle-Plugin = { id = "com.android.tools.build", version.ref = "agp" }
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }

#jetbrains-kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "jetbrainsKotlin" }
jetbrains-kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "jetbrainsKotlin" }
#jetbrains-kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "jetbrainsKotlin" }
jetbrains-kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "jetbrainsKotlin"}
jetbrains-kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "jetbrainsKotlin" }

androidx-navigation = { id = "androidx.navigation.safeargs.kotlin", version.ref = "androidxNavigation" }

arturbosch-detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "arturboschDetekt" }

#This plugin creates convenient tasks in your Gradle project that run ktlint checks or do code auto format.
#Этот плагин создает удобные задачи в вашем проекте Gradle, которые запускают проверки ktlint или выполняют автоматическое форматирование кода.
jlleitschuh-ktlint-gradle = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "jlleitschuhKtlintGradlePlugin" }

#Плагин Gradle для обнаружения обновлений зависимостей
benmanes-versions = { id = "com.github.ben-manes.versions", version.ref = "benmanesVersions" }
# littlerobots-version-catalog-update = { id = "nl.littlerobots.version-catalog-update", version.ref = "littlerobotsVersionCatalogUpdate" }

sonarqube = { id = "org.sonarqube", version.ref = "sonarqube" }
android-junit5 = { id = "de.mannodermaus.android-junit5", version.ref = "mannodermausAndroidJunit5" }

# инструмент создания отчета покрытия кода JUnit тестами для Kotlin
jetbrains-kotlinx-kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "jetbrainsKotlinxKover" }

gradle-enterprise-plugin = { id = "com.gradle.enterprise",  version.ref = "gradleEnterprise" }

google-hilt-gradle-plugin = { id = "com.google.dagger.hilt.android", version.ref = "googleHilt" }
google-services-plugin = { id = "com.google.gms.google-services", version.ref = "googleServices" }

#google-firebase-crashlytics-gradle-plugin = { id = "com.google.firebase", name = "firebase-crashlytics-gradle", version.ref = "googleFirebaseCrashlytics" }
google-firebase-crashlytics-gradle-plugin = { id = "com.google.firebase.crashlytics", version.ref = "googleFirebaseCrashlytics" }
#google-firebase-performance-gradle-plugin = { id = "com.google.firebase", name = "perf-plugin", version.ref = "googleFirebasePerformance" }
google-firebase-performance-gradle-plugin = { id = "com.google.firebase.firebase-perf", version.ref = "googleFirebasePerformance" }

squareup-wire-gradle-plugin = { id = "com.squareup.wire",  version.ref = "squareupProtoWirePlugin" }
#squareup-wire-gradle-plugin = { id = "com.squareup.wire", name = "wire-gradle-plugin", version.ref = "squareupProtoWirePlugin" }
